server {
  listen 80 default_server;
  listen [::]:80 default_server;
  root /octopus/build;
  index index.html;
#  location / {
#    try_files $uri $uri/ =404;
#  }
}
server {
  root /octopus/build;
  index index.html;
#  location / {
#    try_files $uri $uri/ =404;
#  }
  location = /socket.io {
        proxy_pass http://localhost:${SERVER_PORT};
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $host;
  }

    server_name www.${BARE_PURPIE_URL} ${BARE_PURPIE_URL}; # managed by Certbot

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/nginx/ssl/cert.crt; # managed by Certbot
    ssl_certificate_key /etc/nginx/ssl/cert.key; # managed by Certbot

    #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    #ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot



}server {
    if ($host = www.${BARE_PURPIE_URL}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = ${BARE_PURPIE_URL}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


  listen 80 ;
  listen [::]:80 ;
    server_name www.${BARE_PURPIE_URL} ${BARE_PURPIE_URL};
    return 404; # managed by Certbot




}

server {

    server_name ${BARE_PURPIE_URL} www.${BARE_PURPIE_URL};
    location / {
        proxy_pass http://localhost:${SERVER_PORT};
        proxy_set_header Accept-Encoding "";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        #add_header 'Access-Control-Allow-Origin' 'https://${BARE_PURPIE_URL}';
        #add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, OPTIONS' always;
        #add_header 'Access-Control-Allow-Headers' '*';
    }

    listen [::]:8001 ssl; # managed by Certbot
    listen 8001 ssl; # managed by Certbot
    ssl_certificate /etc/nginx/ssl/cert.crt; # managed by Certbot
    ssl_certificate_key /etc/nginx/ssl/cert.key; # managed by Certbot
}
